[{"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\index.js":"1","C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\App.js":"2","C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\formularios\\FormCadVenda.jsx":"3","C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\tabelas\\TabelaItensVenda.jsx":"4","C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\meusComponentes\\busca\\BarraBusca.jsx":"5","C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\meusComponentes\\busca\\CaixaSelecao.jsx":"6"},{"size":282,"mtime":1712099468000,"results":"7","hashOfConfig":"8"},{"size":186,"mtime":1712099468000,"results":"9","hashOfConfig":"8"},{"size":13731,"mtime":1727652192259,"results":"10","hashOfConfig":"8"},{"size":2516,"mtime":1712099468000,"results":"11","hashOfConfig":"8"},{"size":5541,"mtime":1712099468000,"results":"12","hashOfConfig":"8"},{"size":3330,"mtime":1727653240968,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1twdxrj",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\index.js",[],[],"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\App.js",[],[],"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\formularios\\FormCadVenda.jsx",[],[],"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\tabelas\\TabelaItensVenda.jsx",[],[],"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\meusComponentes\\busca\\BarraBusca.jsx",[],[],"C:\\Users\\joaop\\Desktop\\Unoeste ADS\\6-Sexto Bimestre\\Programação Full Stack II\\Atividade_4\\pfsii_atividade4\\frontend\\src\\meusComponentes\\busca\\CaixaSelecao.jsx",["33","34"],[],"import { useEffect, useState } from \"react\";\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\n\nexport default function CaixaSelecao({ enderecoFonteDados,\n    campoChave,\n    campoExibicao,\n    funcaoSelecao,\n    localLista }) {\n    const [valorSelecionado, setValorSelecionado] = useState({\n        [campoChave]: 0,\n        [campoExibicao]:\"Não foi possível obter os dados do backend\"\n    });\n    const [carregandoDados, setCarregandoDados] = useState(false);\n    const [dados, setDados] = useState([]);\n\n    useEffect(() => {\n        try {\n            setCarregandoDados(true);\n            fetch(enderecoFonteDados, { method: \"GET\" }).then((resposta) => {\n                if (resposta.ok) {  //código 200\n                    return resposta.json();\n                }\n                else {\n                    return ([{\n                        [campoChave]: 0,\n                        [campoExibicao]:\"Não foi possível obter os dados do backend\"\n                    }\n                    ]);\n                }\n            }).then((listaDados) => {\n                setCarregandoDados(false);\n                if (localLista){\n                    setDados(listaDados[localLista]);\n                }\n                else{\n                    setDados(listaDados);\n                }\n                //lembrar que a minha caixa de seleção possui um valor previamente selecionado\n                if (listaDados.length > 0){\n                   setValorSelecionado(listaDados[0]);\n                   funcaoSelecao(listaDados[0]);     \n                }\n            });\n        } catch(erro){\n            setCarregandoDados(false);\n            setDados([{\n                       [campoChave]: 0,\n                       [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message \n                      }\n                    ]);\n        }\n    }, []);  //willMount\n\n    return (\n        <Container border>\n            <Row>\n                <Col md={11}>\n                    <Form.Select\n                                 onChange={(evento) => {\n                                    const itemSelecionado = evento.currentTarget.value;\n                                    //ValorSelecionado e funcaoSelecao esperam objetos da lista\n                                                //gerando uma lista somente de ids, cpfs, codigo\n                                    const pos = dados.map((item) => item[campoChave].toString()).indexOf(itemSelecionado);\n                                    setValorSelecionado(dados[pos]);\n                                    funcaoSelecao(dados[pos]);\n                                 }}>\n                        {\n                            dados?.map((item) => {\n                                return <option key={item[campoChave]} \n                                               value={item[campoChave]}>\n                                                {item[campoExibicao]}\n                                       </option>\n                            })\n                        }\n                        \n                    </Form.Select>\n                </Col>\n                <Col md={1}>\n                    <Spinner className={carregandoDados ? \"visible\" : \"invisible\"}></Spinner>\n                </Col>\n            </Row>\n        </Container>\n    );\n}",{"ruleId":"35","severity":1,"message":"36","line":9,"column":12,"nodeType":"37","messageId":"38","endLine":9,"endColumn":28},{"ruleId":"39","severity":1,"message":"40","line":52,"column":8,"nodeType":"41","endLine":52,"endColumn":10,"suggestions":"42"},"no-unused-vars","'valorSelecionado' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'campoChave', 'campoExibicao', 'enderecoFonteDados', 'funcaoSelecao', and 'localLista'. Either include them or remove the dependency array. If 'funcaoSelecao' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [campoChave, campoExibicao, enderecoFonteDados, funcaoSelecao, localLista]",{"range":"46","text":"47"},[1877,1879],"[campoChave, campoExibicao, enderecoFonteDados, funcaoSelecao, localLista]"]